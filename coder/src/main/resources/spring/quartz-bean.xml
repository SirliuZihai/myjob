<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 调度任务 -->
	<bean id="jobDetail"
			class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
			<property name="jobClass" value="com.zihai.schedule.SimpleJob" />
			<property name="durability" value="true"/>
			<!-- <property name="shouldRecover" value="true" /> -->
	</bean>
	
	<!-- 调试触发器 -->
	<bean id="trigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail" />
		<property name="cronExpression">
			<value>0 0/2 * * * ?</value>
		</property>
		<property name="timeZone">
			<value>GMT+8:00</value>
		</property>
	</bean>
	<!-- 调度工厂 -->
	<bean id="scheduler" lazy-init="false" 
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		
		<!-- 注册JobDetails -->
		<property name="jobDetails">
			<list>
				<!-- <ref bean="jobDetail"/> -->
			</list>
		</property>
		<!-- 注册triggers -->
		<property name="triggers">
			<list>
				<!-- <ref bean="trigger" /> -->
			</list>
		</property>
		<property name="jobFactory">
			<bean class="com.zihai.schedule.AutowiringSpringBeanJobFactory" />
		</property>
		
		<!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
		<property name="overwriteExistingJobs" value="true"/>
		
		<property name="autoStartup" value="true" />
		
		<property name="schedulerName" value="quartzScheduler" />
		
		<!-- <property name="transactionManager" ref="transManager" /> -->
		
		<!-- <property name="configLocation" value="classpath:quartz.properties" /> -->
		<!-- 属性 -->
		<property name="quartzProperties">
			<props>
				<!-- 集群要求必须使用持久化存储 -->
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreCMT</prop>
				
				<prop key="org.quartz.scheduler.instanceName">EventScheduler</prop>
				<!-- 每个集群节点要有独立的instanceId -->
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				
				<!-- Configure ThreadPool -->
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">2</prop><!-- 50 -->
				<prop key="org.quartz.threadPool.threadPriority">5</prop><!-- 5 -->
				<prop key="org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread">true</prop>
				<!-- Configure JobStore -->
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
				<prop key="org.quartz.jobStore.tablePrefix">qrtz_</prop>
				<prop key="org.quartz.jobStore.maxMisfiresToHandleAtATime">10</prop>
				<!-- 开启集群 -->
				<prop key="org.quartz.jobStore.isClustered">true</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
				<prop key="org.quartz.jobStore.dontSetAutoCommitFalse">true</prop>
				<prop key="org.quartz.jobStore.txIsolationLevelSerializable">false</prop>
				<prop key="org.quartz.jobStore.dataSource">myDS</prop>
				<prop key="org.quartz.jobStore.nonManagedTXDataSource">myDS</prop>
				<prop key="org.quartz.jobStore.useProperties">false</prop>
				<!-- Configure Datasources  -->
				<prop key="org.quartz.dataSource.myDS.driver">${db.driver}</prop>
				<prop key="org.quartz.dataSource.myDS.URL">${db.url2}</prop>
				<prop key="org.quartz.dataSource.myDS.user">${db.username}</prop>
				<prop key="org.quartz.dataSource.myDS.password">${db.password}</prop>
				<prop key="org.quartz.dataSource.myDS.maxConnections">2</prop><!-- 10 -->
				<prop key="org.quartz.dataSource.myDS.validationQuery">select 0 from dual</prop>
			</props>
		</property>
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
	</bean>
</beans>