<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd" >
	
	 <context:component-scan base-package="com.zihai.*.controller">
 			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
 	</context:component-scan> 
 	
	  <!-- <bean class="org.springframework.http.converter.ResourceHttpMessageConverter" /> 
	  <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >  
	       <property name="supportedMediaTypes">  
	          <list>  
	            <value>text/html;charset=UTF-8</value>  
	            <value>text/json;charset=UTF-8</value>
	            <value>application/json;charset=UTF-8</value>
	          </list>   
	       </property>  
	 </bean> -->

	<!-- HandlerMapping -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	
	<!-- HandlerAdapter-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter ">
		<property name="messageConverters">
			<list>
				<bean class = "org.springframework.http.converter.StringHttpMessageConverter">
	                <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
	            </bean>
			      <ref bean="fastJsonHttpMessageConverter" />
			       <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/><!-- 解析导出文件byte流 --> 
				 <!-- <ref bean="mappingJackson2HttpMessageConverter" />  -->
			</list>
		</property>
	</bean>
	
	<!-- ViewResolver -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/page/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
 
	<!-- FreeMarker视图解析   如返回student。。在这里配置后缀名ftl和视图解析器。。-->
	 <bean  class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		  <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property>
		  <property name="suffix" value=".ftl" />
		  <property name="prefix" value="/page/"/>
		  <property name="contentType" value="text/html; charset=UTF-8"/>
		  <property name="cache" value="false" />
          <property name="requestContextAttribute" value="request" />
          <property name="exposeSpringMacroHelpers" value="true" />
          <property name="exposeRequestAttributes" value="true" />
          <!-- <property name="allowSessionOverride" value="true"/> -->
          <property name="exposeSessionAttributes" value="true" />
          <property name="order" value="0"/>
	 </bean>
	<!-- freemarker的配置 -->
	 <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		  <property name="templateLoaderPath" value="/" />
		  <property name="freemarkerSettings">
		   <props>
		   		<prop key="output_encoding" >utf-8</prop>
			    <prop key="template_update_delay">10</prop>
			    <prop key="locale">zh_CN</prop>
			    <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
			    <prop key="date_format">yyyy-MM-dd</prop>
			    <prop key="number_format">##########0.000</prop>
		   </props>
		  </property>
	 </bean>
	 <!-- 使用fastJson来支持JSON数据格式 -->
	<bean id="fastJsonHttpMessageConverter"
	      class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
	    <property name="supportedMediaTypes">
	        <list>
	            <!--解决IE JSON提示下载的问题-->
	            <value>text/html;charset=UTF-8</value>
	            <value>application/json;charset=UTF-8</value>
	        </list>
	    </property>
	    <property name="features">
	        <array>
	            <!--NULL过滤-->
	            <value>QuoteFieldNames</value>
	            <value>WriteMapNullValue</value>
	            <value>WriteNullStringAsEmpty</value>
	            <value>WriteNullListAsEmpty</value>
	            <value>WriteNullNumberAsZero</value>
	            <value>WriteNullBooleanAsFalse</value>
	            <!--浏览器兼容-->
	            <value>BrowserCompatible</value>
	            <!--斜杠处理-->
	            <value>WriteSlashAsSpecial</value>
	        </array>
	    </property>
	</bean>
	<!-- 处理异常 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.AuthorizationException">shiro/noAuth</prop>
            </props>
        </property>
    </bean>
		 <!-- 启动SpringMVC的注解功能，它会自动注册HandlerMapping、 HandlerAdapter、ExceptionResolver的相关实例 
 	 并注册converter问题-->
 	 <mvc:annotation-driven ><mvc:async-support default-timeout="10000"/></mvc:annotation-driven>  
 	 <!-- 解决shiro注释aop调用，控制controller方法级别 ；==以下配置-->
 	 <!-- <aop:config proxy-target-class="true"/> -->
 	 
 	 <!-- Enable Shiro Annotations for Spring-configured beans.  Only run after he lifecycleBeanProcessor has run:-->
	 <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true"/>
	</bean>
		<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
		<!-- 多文件上传-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	<property name="defaultEncoding">
				<value>UTF-8</value>
			</property>
			<property name="maxUploadSize">
				<value>32505856</value> <!--31*1024*1024-->
			</property>
			<property name="maxInMemorySize">
				<value>10240</value>
			</property>
	</bean>
<!-- <bean id="conversionSerivce"  class="org.springframework.context.support.ConversionServiceFactoryBean">
	<property name="converters">
		<list>
			<bean class="com.zihai.common.StringConverter"/>
		</list>
	</property>
</bean> -->
</beans>
