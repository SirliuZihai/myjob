<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
               http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder location="classpath:property/redis.properties" ignore-unresolvable="true"></context:property-placeholder>

	 <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >
	 	 <property name="maxIdle" value="1" /><!-- 最大空闲连接数 -->
        <property name="maxTotal" value="3" /><!-- 最大连接数-->
        <property name="minEvictableIdleTimeMillis" value="300000"></property><!-- 逐出连接的最小空闲时间 -->
        <property name="numTestsPerEvictionRun" value="3"></property><!-- 每次逐出检查时 逐出的最大数目 -->
        <property name="timeBetweenEvictionRunsMillis" value="600000"></property><!-- 逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1 -->
        <property name="testOnBorrow" value="false" /><!-- 在获取连接的时候检查有效性 default:false -->
	 </bean>  
 
      
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"  p:pool-config-ref="poolConfig">
       <!--  <constructor-arg name="sentinelConfig" ref="sentinelConfig"></constructor-arg> -->
        </bean>  
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />
        <!-- 序列化方式 建议key/hashKey采用StringRedisSerializer。 --> 
         <!-- <property name="valueSerializer">  
            <bean  class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
        </property>  -->
    </bean>
    <!-- 
      <bean id="sentinelConfig"
        class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <property name="name" value="mymaster"></property>
            </bean>
        </property>
        <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="192.168.12.90" />
                    <constructor-arg name="port" value="7505" />
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="192.168.12.90" />
                    <constructor-arg name="port" value="7506" />
                </bean>
            </set>
        </property>
    </bean>
	 -->
</beans>